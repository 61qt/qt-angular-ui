{{#each modules}}
  {{#compare 'proxy' '===' type}}
    server {
      listen 80;

      {{#if ../useHttps}}
        listen 443;
      {{/if}}

      server_name {{{separate domain}}};
      root {{ ../rootPath }}/;

      {{#if ../useHttps}}
        ssl on;
        ssl_certificate {{ ../certPath }}/{{ ../cert }};
        ssl_certificate_key {{ ../certPath }}/{{ ../certKey }};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=1";
      {{/if}}

      access_log {{ ../logsPath }}/access.log combined buffer=16k flush=5s;
      error_log {{ ../logsPath }}/error.log error;

      error_page 404 500 502 503 504 @fallback;

      location = / {
        add_header Cache-Control "no-store, no-cache, private";
        try_files $uri /{{ entries.[0] }}.html;
        proxy_pass http://{{ proxy }}:{{ proxyPort }}/{{ entries.[0] }}.html;
      }

      location ~* ^/({{ division }})/ {
        add_header Cache-Control "no-store, no-cache, private";
        try_files $uri /$1.html @proxy_module;
      }

      location ~* /(.*)$ {
        add_header Cache-Control "no-store, no-cache, private";
        try_files $uri /$1 @proxy_assets;
      }

      location @proxy_assets {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://{{ proxy }}:{{ proxyPort }}/$1?$args;
        proxy_intercept_errors on;
        error_page 404 /error.html;
      }

      location @proxy_module {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://{{ proxy }}:{{ proxyPort }}/$1.html;
        proxy_intercept_errors on;
        error_page 404 /error.html;
      }

      location @fallback {
        try_files /error.html =500;
      }
    }
  {{/compare}}

  {{#compare 'cdn' '===' type}}
    server {
      listen 80;

      {{#if ../useHttps}}
        listen 443;
      {{/if}}

      server_name {{{separate domain}}};
      root {{ ../rootPath }}/;

      {{#if ../useHttps}}
        ssl on;
        ssl_certificate {{ ../certPath }}/{{ ../cert }};
        ssl_certificate_key {{ ../certPath }}/{{ ../certKey }};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=1";
      {{/if}}

      access_log {{ ../logsPath }}/access.log combined buffer=16k flush=5s;
      error_log {{ ../logsPath }}/error.log error;

      error_page 404 500 502 503 504 @fallback;

      location ~* /(.*)$ {
        access_log off;
        expires max;
        add_header Cache-Control public;
        try_files $uri /$1 =404;
      }

      location @fallback {
        try_files /error.html =500;
      }
    }
  {{/compare}}
{{/each}}
