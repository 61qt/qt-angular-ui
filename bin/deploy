#!/bin/bash

# Variables definations
DEPLOY_BRANCH=release
DIST_FOLDER=libs
TEMP_FOLDER=.temporary

RELEASE_BRANCH=$(git symbolic-ref -q HEAD)
RELEASE_BRANCH=${RELEASE_BRANCH##refs/heads/}
RELEASE_BRANCH=${RELEASE_BRANCH:-HEAD}

TARGET_REPO=$(git config --get remote.origin.url)
LAST_MESSAGE=$(git log -1 origin/$RELEASE_BRANCH --oneline)
DIST_FOLDER_PATH=$(realpath "$DIST_FOLDER")
TEMP_FOLDER_PATH=$(realpath "$TEMP_FOLDER")

printf '%s \e[0;94m%s\e[0m\n' 'Repository:' "$TARGET_REPO"
printf '%s \e[0;94m%s\e[0m\n' 'Distribute:' "$DIST_FOLDER_PATH"
printf '%s \e[0;94m%s\e[0m\n' ' Temporary:' "$TEMP_FOLDER_PATH"

# Switch release branch
git checkout $RELEASE_BRANCH || exit 0;
git pull origin $RELEASE_BRANCH || exit 0;

if [ -d $DIST_FOLDER_PATH ]; then
  printf '\e[0;94m\xe2\x9c\xa8  %s\e[0m\n' 'Deploy to product environment.'

  # Clean or create temporary directory
  if [ -d $TEMP_FOLDER_PATH ]; then
    rm -rf $TEMP_FOLDER_PATH
    printf '\e[0;32m\xe2\x9c\x94  %s\e[0m\n' "Clean $TEMP_FOLDER_PATH folder."
  fi

  rm -rf $TEMP_FOLDER_PATH
  mkdir $TEMP_FOLDER_PATH
  cd $TEMP_FOLDER_PATH

  # Clone pero and switch branch
  git init
  git remote add origin $TARGET_REPO

  if [ $(git checkout $DEPLOY_BRANCH) ]; then
    printf '\e[0;94m\xe2\x9c\xa8  %s\e[0m\n' "Checkout branch $DEPLOY_BRANCH."
  else
    printf '\e[0;94m\xe2\x9c\xa8  %s\e[0m\n' "Create and switch to branch $DEPLOY_BRANCH."
    git checkout -b $DEPLOY_BRANCH

    if [ $(git pull origin $DEPLOY_BRANCH) ]; then
      printf '\e[0;94m\xe2\x9c\xa8  %s\e[0m\n' 'Branch is not exist.'
    else
      cp -rf $DIST_FOLDER_PATH/* .

      git add -f .

      git commit -m "($LAST_MESSAGE) Deploy branch $RELEASE_BRANCH to $TARGET_REPO:$DEPLOY_BRANCH"
      git push origin $DEPLOY_BRANCH > /dev/null || exit 0;

      printf '\e[0;32m\xe2\x9c\x94  %s\e[0m\n' 'Deployment completed.'
      exit 0;
    fi
  fi

  # Copy data we're interested in to that directory
  git rm -rf .
  cp -rf $DIST_FOLDER_PATH/* .

  # Add, commit and push files
  git add -f .

  DIFF=$(git diff-index --name-only HEAD --) || exit 0;

  if [ -z $DIFF ]; then
    printf '\e[0;93m! %s\e[0m\n' 'Nothing has been changed.'
  else
    git commit -m "($LAST_MESSAGE) Deploy branch $RELEASE_BRANCH to $TARGET_REPO:$DEPLOY_BRANCH"
    git push origin $DEPLOY_BRANCH > /dev/null || exit 0;

    printf '\e[0;32m\xe2\x9c\x94  %s\e[0m\n' 'Deployment completed.'
  fi
else
  printf '\e[0;31m\xe2\x9c\x98  %s\e[0m\n' "Folder $DIST_FOLDER_PATH does not exist."
fi
